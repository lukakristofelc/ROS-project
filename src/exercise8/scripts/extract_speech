#!/usr/bin/python3

import roslib
import time
import rospy

import speech_recognition as sr
from os import path
from std_msgs.msg import String



class SpeechTranscriber:
    def __init__(self):
        rospy.init_node('speech_transcriber', anonymous=True)
        
        # The documentation is here: https://github.com/Uberi/speech_recognition

        # The main interface to the speech recognition engines
        self.sr = sr.Recognizer()
        
        # These are the methods that are available to us for recognition.
        # Please note that most of them use an internet connection and currently they are using
        # a default API user/pass, so there are restrictions on the number of requests we can make.
        # recognize_bing(): Microsoft Bing Speech
        # recognize_google(): Google Web Speech API
        # recognize_google_cloud(): Google Cloud Speech - requires installation of the google-cloud-speech package
        # recognize_houndify(): Houndify by SoundHound
        # recognize_ibm(): IBM Speech to Text
        # recognize_sphinx(): CMU Sphinx - requires installing PocketSphinx
        # recognize_wit(): Wit.ai
        
        # An interface to the default microphone
        self.mic = sr.Microphone()

        # Audio iz datoteke
        AUDIO_FILE = path.join(path.dirname(path.realpath(__file__)), "dialog2.wav")
        self.sound = sr.AudioFile(AUDIO_FILE)
        
        
        # You can get the list of available devices: sr.Microphone.list_microphone_names()
    # You can set the default microphone like this: self. mic = sr.Microphone(device_index=3)
    # where the device_index is the position in the list from the first command.

    def recognize_speech(self):
        with self.sound as source:
            audio = self.sr.record(source)  # read the entire audio file

            #print('Adjusting mic for ambient noise...')
            #self.sr.adjust_for_ambient_noise(audio)
            #print('SPEAK NOW!')
            #audio = self.sr.listen(audio)
           
        print('I am now processing the sounds you made.')
        recognized_text = ''
        try:
            recognized_text = self.sr.recognize_google(audio)
        except sr.RequestError as e:
            print('API is probably unavailable', e)
        except sr.UnknownValueError:
            print('Did not manage to recognize anything.')
            
        recognized_text = recognized_text.split()

        return recognized_text


if __name__ == '__main__':
    
    st = SpeechTranscriber()
    text_pub = rospy.Publisher('detected_speech', String, queue_size=1000)

    while not rospy.is_shutdown():
        text = st.recognize_speech()
        text = text[0] + " " + text[1] + " " + text[2]
        text_pub.publish(text)
        print('I recognized this sentence:', text)
        time.sleep(4)


